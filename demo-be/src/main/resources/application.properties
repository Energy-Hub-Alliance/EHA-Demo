server.port=8090
server.shutdown=graceful
logging.level.root=${APP_LOG_LEVEL:INFO}

# Logging for feign client
logging.level.io.energyhub.demoapi.eha.client=${FEIGN_LOG_LEVEL:DEBUG}
spring.cloud.openfeign.client.config.default.loggerLevel=${FEIGN_DETAILS_LOG_LEVEL:FULL}

# OAuth2
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://keycloak:8080/realms/eha-demo-app

# SpringDoc
springdoc.swagger-ui.disable-swagger-default-url=true
springdoc.swagger-ui.displayRequestDuration=true
server.forward-headers-strategy=framework
springdoc.swagger-ui.operationsSorter=alpha
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.oauth.client-id=democlient
springdoc.default-produces-media-type=application/json

demo-app.api-key=${DEMO_APP_API_KEY}
gateway.base-url=${GATEWAY_BASE_URL}

demo-app.subscription-id=${DEMO_APP_SUBSCRIPTION_ID}
demo-app.topics=${demo-app.subscription-id}.vehicle.connect,${demo-app.subscription-id}.vehicle.update,${demo-app.subscription-id}.vehicle.delete,${demo-app.subscription-id}.vehicle.command,\
  ${demo-app.subscription-id}.tariff.connect,${demo-app.subscription-id}.tariff.delete,${demo-app.subscription-id}.tariff.price.update,\
  ${demo-app.subscription-id}.hvac.connect,${demo-app.subscription-id}.hvac.update,${demo-app.subscription-id}.hvac.delete,${demo-app.subscription-id}.hvac.command,${demo-app.subscription-id}.hvac.schedules.update,\
  ${demo-app.subscription-id}.charger.connect,${demo-app.subscription-id}.charger.update,${demo-app.subscription-id}.charger.delete,${demo-app.subscription-id}.charger.command,\
  ${demo-app.subscription-id}.battery.connect,${demo-app.subscription-id}.battery.update,${demo-app.subscription-id}.battery.delete,\
  ${demo-app.subscription-id}.pv-inverter.connect,${demo-app.subscription-id}.pv-inverter.update,${demo-app.subscription-id}.pv-inverter.delete,\
  ${demo-app.subscription-id}.meter.connect,${demo-app.subscription-id}.meter.update,${demo-app.subscription-id}.meter.delete

# Additional Kafka properties
spring.kafka.properties.security.protocol=SASL_SSL
spring.kafka.properties.sasl.mechanism=OAUTHBEARER
spring.kafka.properties.sasl.oauthbearer.token.endpoint.url=${KAFKA_KEYCLOAK_TOKEN_URL}
spring.kafka.properties.sasl.login.callback.handler.class=org.apache.kafka.common.security.oauthbearer.secured.OAuthBearerLoginCallbackHandler

#Dev config
spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \
  clientId="${KAFKA_CLIENT_ID}" \
  clientSecret="${KAFKA_CLIENT_SECRET}";
spring.kafka.bootstrap-servers=${KAFKA_URL}
spring.kafka.ssl.trust-store-location=${KAFKA_TRUST_STORE_FILE_PATH}
spring.kafka.ssl.trust-store-password=${KAFKA_TRUST_STORE_PASSWORD}

# Only one consumer from the group will read the message
spring.kafka.consumer.group-id=demo-app-${demo-app.subscription-id}
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.key-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.key.delegate.class=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=io.energyhub.demoapi.config.kafka.KafkaJsonDeserializer
spring.kafka.consumer.properties.spring.json.value.type.method=io.energyhub.demoapi.config.kafka.KafkaJsonDeserializer.topicNameToMessageType
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.listener.ack-mode=BATCH
spring.kafka.consumer.enable-auto-commit=false